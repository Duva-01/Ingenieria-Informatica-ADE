-- Borrado y nueva creación de las tablas e inserción de 10 tuplas predefinidas en el código en la tabla Stock.

DROP TABLE Stock;
DROP TABLE Pedido;

DROP TABLE Detalle_Pedido;
CREATE TABLE Stock
(
    Cproducto NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Cantidad INT NOT NULL
);
/*/
*/

CREATE TABLE Pedido(
    Cpedido NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Ccliente INT NOT NULL,
    Fecha_pedido DATE NOT NULL
);

CREATE TABLE Detalle_Pedido(
    Cpedido     INT ,
    Cproducto   INT,
    Cantidad INT NOT NULL,
    FOREIGN KEY(Cpedido)  REFERENCES Pedido(Cpedido),
    FOREIGN KEY(Cproducto) REFERENCES Stock(Cproducto),
    PRIMARY KEY(Cpedido,Cproducto)
);


INSERT INTO Stock (Cantidad) VALUES (0);
INSERT INTO Stock (Cantidad) VALUES (1);
INSERT INTO Stock (Cantidad) VALUES (2);
INSERT INTO Stock (Cantidad) VALUES (3);
INSERT INTO Stock (Cantidad) VALUES (4);
INSERT INTO Stock (Cantidad) VALUES (5);
INSERT INTO Stock (Cantidad) VALUES (6);
INSERT INTO Stock (Cantidad) VALUES (7);
INSERT INTO Stock (Cantidad) VALUES (8);
INSERT INTO Stock (Cantidad) VALUES (9);


--  Dar de alta nuevo pedido
    --  1º PUNTO
    INSERT INTO Pedido (Ccliente, Fecha_pedido) VALUES (valor, valor)
    -- SAVE POINT
    -- Opcion 1 del menu
    INSERT INTO Detalle_Pedido(Cpedido, Cproducto, Cantidad) VALUES (valor, valor, valor) -- Hay que controlar que el producto exista y que exista stock


/*
o Restar CANTIDAD al saldo de la PRODUCTO (update)
o Sumar CANTIDAD al saldo de la DETALLE PEDIDO(update)
o Reflejar el movimiento en PRODUCTO (insert)
o Reflejar el movimiento en DETALLE PEDIDO (insert)
*/
    -- Opcion 2 del menu
    

-- Borrar un pedido (borrando sus detalles en cascada)

-- Salir del programa y cerrar conexión a BD